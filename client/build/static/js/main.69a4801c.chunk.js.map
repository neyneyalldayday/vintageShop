{"version":3,"sources":["utils/actions.js","utils/reducers.js","utils/store.js","images/vintagepic.jpg","components/Hero/index.js","pages/Home.js","utils/helpers.js","components/ProductItem/index.js","utils/queries.js","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/StoreFront.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","components/Footer/index.js","pages/Success.js","pages/OrderHistory.js","App.js","index.js"],"names":["UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","CLEAR_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","initialState","products","categories","currentCategory","cart","cartOpen","reducers","state","action","type","product","map","_id","purchaseQuantity","newState","filter","length","createStore","Hero","className","src","HeroPic","alt","to","Home","pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","ProductItem","item","dispatch","useDispatch","useSelector","image","price","quantity","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","ProductList","useQuery","loading","data","useEffect","forEach","then","category","CategoryMenu","categoryData","id","CartItem","placeholder","value","onChange","target","role","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","props","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Footer","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","StoreFront","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69a4801c.chunk.js","sourcesContent":["export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\r\n\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\r\nexport const TOGGLE_CART = \"TOGGLE_CART\";\r\n\r\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\r\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\r\n","import {\r\n    UPDATE_PRODUCTS,\r\n    ADD_TO_CART,\r\n    UPDATE_CART_QUANTITY,\r\n    REMOVE_FROM_CART,\r\n    ADD_MULTIPLE_TO_CART,\r\n    UPDATE_CATEGORIES,\r\n    UPDATE_CURRENT_CATEGORY,\r\n    CLEAR_CART,\r\n    TOGGLE_CART\r\n  } from \"./actions\";\r\n  \r\n  const initialState = {\r\n    products: [],\r\n    categories: [],\r\n    currentCategory: '',\r\n    cart: [],\r\n    cartOpen: false\r\n  };\r\n  \r\n  export const reducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case UPDATE_PRODUCTS:\r\n        return {\r\n          ...state,\r\n          products: [...action.products],\r\n        };\r\n  \r\n      case ADD_TO_CART:\r\n        return {\r\n          ...state,\r\n          cartOpen: true,\r\n          cart: [...state.cart, action.product],\r\n        };\r\n  \r\n      case ADD_MULTIPLE_TO_CART:\r\n        return {\r\n          ...state,\r\n          cart: [...state.cart, ...action.products],\r\n        };\r\n  \r\n      case UPDATE_CART_QUANTITY:\r\n        return {\r\n          ...state,\r\n          cartOpen: true,\r\n          cart: state.cart.map(product => {\r\n            if (action._id === product._id) {\r\n              product.purchaseQuantity = action.purchaseQuantity\r\n            }\r\n            return product\r\n          })\r\n        };\r\n  \r\n      case REMOVE_FROM_CART:\r\n        let newState = state.cart.filter(product => {\r\n          return product._id !== action._id;\r\n        });\r\n  \r\n        return {\r\n          ...state,\r\n          cartOpen: newState.length > 0,\r\n          cart: newState\r\n        };\r\n  \r\n      case CLEAR_CART:\r\n        return {\r\n          ...state,\r\n          cartOpen: false,\r\n          cart: []\r\n        };\r\n  \r\n      case TOGGLE_CART:\r\n        return {\r\n          ...state,\r\n          cartOpen: !state.cartOpen\r\n        };\r\n  \r\n      case UPDATE_CATEGORIES:\r\n        return {\r\n          ...state,\r\n          categories: [...action.categories],\r\n        };\r\n  \r\n      case UPDATE_CURRENT_CATEGORY:\r\n        return {\r\n          ...state,\r\n          currentCategory: action.currentCategory\r\n        }\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default reducers;","import { createStore } from 'redux';\r\nimport reducers from './reducers';\r\n\r\nexport default createStore(reducers);","export default __webpack_public_path__ + \"static/media/vintagepic.e9c594d2.jpg\";","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport HeroPic from '../../images/vintagepic.jpg'\r\n\r\nexport const Hero = () => {\r\n  return (\r\n    <div className='hero-container'>\r\n        <div className='hero-bg'>\r\n            <div className='image-bg'>\r\n            <img src={HeroPic} alt='pic of clothes'></img>\r\n            </div>            \r\n        </div>\r\n        <div className='hero-content'>\r\n            <div className='hero-items'>                \r\n                <Link to=\"/storefront\" className='store-link'>Take a look</Link>               \r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\n// import ProductList from \"../components/ProductList\";\r\n// import CategoryMenu from \"../components/CategoryMenu\";\r\n// import Cart from \"../components/Cart\";\r\nimport { Hero } from \"../components/Hero\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      {/* <CategoryMenu />\r\n      <ProductList />\r\n      <Cart /> */}\r\n\r\n      <Hero />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export function pluralize(name, count) {\r\n    if (count === 1) {\r\n      return name;\r\n    }\r\n    return name + 's';\r\n  }\r\n  \r\n  export function idbPromise(storeName, method, object) {\r\n    return new Promise((resolve, reject) => {\r\n      const request = window.indexedDB.open('shop-shop', 1);\r\n      let db, tx, store;\r\n      request.onupgradeneeded = function(e) {\r\n        const db = request.result;\r\n        db.createObjectStore('products', { keyPath: '_id' });\r\n        db.createObjectStore('categories', { keyPath: '_id' });\r\n        db.createObjectStore('cart', { keyPath: '_id' });\r\n      };\r\n  \r\n      request.onerror = function(e) {\r\n        console.log('There was an error');\r\n      };\r\n  \r\n      request.onsuccess = function(e) {\r\n        db = request.result;\r\n        tx = db.transaction(storeName, 'readwrite');\r\n        store = tx.objectStore(storeName);\r\n  \r\n        db.onerror = function(e) {\r\n          console.log('error', e);\r\n        };\r\n  \r\n        switch (method) {\r\n          case 'put':\r\n            store.put(object);\r\n            resolve(object);\r\n            break;\r\n          case 'get':\r\n            const all = store.getAll();\r\n            all.onsuccess = function() {\r\n              resolve(all.result);\r\n            };\r\n            break;\r\n          case 'delete':\r\n            store.delete(object._id);\r\n            break;\r\n          default:\r\n            console.log('No valid method');\r\n            break;\r\n        }\r\n  \r\n        tx.oncomplete = function() {\r\n          db.close();\r\n        };\r\n      };\r\n    });\r\n  }","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { pluralize } from '../../utils/helpers';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\r\nimport { idbPromise } from '../../utils/helpers';\r\n\r\nfunction ProductItem(item) {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n\r\n  const { image, name, _id, price, quantity } = item;\r\n\r\n  const { cart } = state;\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id);\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: _id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n      idbPromise('cart', 'put', {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...item, purchaseQuantity: 1 },\r\n      });\r\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card px-1 py-1\">\r\n      <Link to={`/products/${_id}`}>\r\n        <img alt={name} src={`/images/${image}`} />\r\n        <p>{name}</p>\r\n      </Link>\r\n      <div>\r\n        <div>\r\n          {quantity} {pluralize('item', quantity)} in stock\r\n        </div>\r\n        <span>${price}</span>\r\n      </div>\r\n      <button onClick={addToCart}>Add to cart</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductItem;\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const QUERY_PRODUCTS = gql`\r\n  query getProducts($category: ID) {\r\n    products(category: $category) {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      image\r\n      category {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CHECKOUT = gql`\r\n  query getCheckout($products: [ID]!) {\r\n    checkout(products: $products) {\r\n      session\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_ALL_PRODUCTS = gql`\r\n  {\r\n    products {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      category {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CATEGORIES = gql`\r\n  {\r\n    categories {\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_USER = gql`\r\n  {\r\n    user {\r\n      firstName\r\n      lastName\r\n      orders {\r\n        _id\r\n        purchaseDate\r\n        products {\r\n          _id\r\n          name\r\n          description\r\n          price\r\n          quantity\r\n          image\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport ProductItem from '../ProductItem';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_PRODUCTS } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\n// import spinner from '../../assets/spinner.gif';\r\n\r\nfunction ProductList() {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n\r\n  const { currentCategory } = state;\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products,\r\n      });\r\n      data.products.forEach((product) => {\r\n        idbPromise('products', 'put', product);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise('products', 'get').then((products) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products: products,\r\n        });\r\n      });\r\n    }\r\n  }, [data, loading, dispatch]);\r\n\r\n  function filterProducts() {\r\n    if (!currentCategory) {\r\n      return state.products;\r\n    }\r\n\r\n    return state.products.filter(\r\n      (product) => product.category._id === currentCategory\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"my-2\">\r\n      <h2>Our Products:</h2>\r\n      {state.products.length ? (\r\n        <div className=\"flex-row\">\r\n          {filterProducts().map((product) => (\r\n            <ProductItem\r\n              key={product._id}\r\n              _id={product._id}\r\n              image={product.image}\r\n              name={product.name}\r\n              price={product.price}\r\n              quantity={product.quantity}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <h3>You haven't added any products yet!</h3>\r\n      )}\r\n      {loading ? <img src={''} alt=\"loading\" /> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n","import React, { useEffect } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n} from '../../utils/actions';\r\nimport { QUERY_CATEGORIES } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\n\r\nfunction CategoryMenu() {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n\r\n  const { categories } = state;\r\n\r\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\r\n\r\n  useEffect(() => {\r\n    if (categoryData) {\r\n      dispatch({\r\n        type: UPDATE_CATEGORIES,\r\n        categories: categoryData.categories,\r\n      });\r\n      categoryData.categories.forEach((category) => {\r\n        idbPromise('categories', 'put', category);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise('categories', 'get').then((categories) => {\r\n        dispatch({\r\n          type: UPDATE_CATEGORIES,\r\n          categories: categories,\r\n        });\r\n      });\r\n    }\r\n  }, [categoryData, loading, dispatch]);\r\n\r\n  const handleClick = (id) => {\r\n    dispatch({\r\n      type: UPDATE_CURRENT_CATEGORY,\r\n      currentCategory: id,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Choose a Category:</h2>\r\n      {categories.map((item) => (\r\n        <button\r\n          key={item._id}\r\n          onClick={() => {\r\n            handleClick(item._id);\r\n          }}\r\n        >\r\n          {item.name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryMenu;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\n\r\n\r\nconst CartItem = ({ item }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const removeFromCart = item => {\r\n        dispatch({\r\n            type: REMOVE_FROM_CART,\r\n            _id: item._id\r\n        });\r\n        idbPromise('cart', 'delete', {...item});\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const value = e.target.value;\r\n        if (value === '0') {\r\n            dispatch({\r\n                type: REMOVE_FROM_CART,\r\n                _id: item._id\r\n            });\r\n            idbPromise('cart', 'delete', {...item});\r\n        } else {\r\n            dispatch({\r\n                type: UPDATE_CART_QUANTITY,\r\n                _id: item._id,\r\n                purchaseQuantity: parseInt(value)\r\n            });\r\n            idbPromise('cart', 'put', {...item, purchaseQuantity: parseInt(value)});\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"flex-row\">\r\n      <div>\r\n        <img\r\n          src={`/images/${item.image}`}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <div>{item.name}, ${item.price}</div>\r\n        <div>\r\n          <span>Qty:</span>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"1\"\r\n            value={item.purchaseQuantity}\r\n            onChange={onChange}\r\n          />\r\n          <span\r\n            role=\"img\"\r\n            aria-label=\"trash\"\r\n            onClick={() => removeFromCart(item)}\r\n          >\r\n            🗑️\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CartItem;","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n    getProfile() {\r\n        return decode(this.getToken());\r\n    }\r\n\r\n    loggedIn() {\r\n        const token = this.getToken();\r\n        return !!token && !this.isTokenExpired(token)\r\n    }\r\n\r\n    isTokenExpired(token) {\r\n        try {\r\n            const decoded = decode(token);\r\n            if (decoded.exp < Date.now() / 1000) {\r\n                return true;\r\n            }else return false;\r\n        } catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getToken() {\r\n        return localStorage.getItem('id_token');\r\n    }\r\n\r\n    login(idToken) {\r\n        localStorage.setItem('id_token', idToken);\r\n\r\n        window.location.assign('/');\r\n    }\r\n\r\n\r\n    logout() {\r\n        localStorage.removeItem('id_token');\r\n\r\n        window.location.assign('/');\r\n    }\r\n}\r\n\r\nexport default new AuthService();","import React, { useEffect } from 'react';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport { QUERY_CHECKOUT } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\nimport CartItem from '../CartItem';\r\nimport Auth from '../../utils/auth';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\r\nimport './style.css';\r\n\r\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\r\n\r\nconst Cart = () => {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      stripePromise.then((res) => {\r\n        res.redirectToCheckout({ sessionId: data.checkout.session });\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    async function getCart() {\r\n      const cart = await idbPromise('cart', 'get');\r\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\r\n    }\r\n\r\n    if (!state.cart.length) {\r\n      getCart();\r\n    }\r\n  }, [state.cart.length, dispatch]);\r\n\r\n  function toggleCart() {\r\n    dispatch({ type: TOGGLE_CART });\r\n  }\r\n\r\n  function calculateTotal() {\r\n    let sum = 0;\r\n    state.cart.forEach((item) => {\r\n      sum += item.price * item.purchaseQuantity;\r\n    });\r\n    return sum.toFixed(2);\r\n  }\r\n\r\n  function submitCheckout() {\r\n    const productIds = [];\r\n\r\n    state.cart.forEach((item) => {\r\n      for (let i = 0; i < item.purchaseQuantity; i++) {\r\n        productIds.push(item._id);\r\n      }\r\n    });\r\n\r\n    getCheckout({\r\n      variables: { products: productIds },\r\n    });\r\n  }\r\n\r\n  if (!state.cartOpen) {\r\n    return (\r\n      <div className=\"cart-closed\" onClick={toggleCart}>\r\n        <span role=\"img\" aria-label=\"trash\">\r\n          🛒\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      <div className=\"close\" onClick={toggleCart}>\r\n        [close]\r\n      </div>\r\n      <h2>Shopping Cart</h2>\r\n      {state.cart.length ? (\r\n        <div>\r\n          {state.cart.map((item) => (\r\n            <CartItem key={item._id} item={item} />\r\n          ))}\r\n\r\n          <div className=\"flex-row space-between\">\r\n            <strong>Total: ${calculateTotal()}</strong>\r\n\r\n            {Auth.loggedIn() ? (\r\n              <button onClick={submitCheckout}>Checkout</button>\r\n            ) : (\r\n              <span>(log in to check out)</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h3>\r\n          <span role=\"img\" aria-label=\"shocked\">\r\n            😱\r\n          </span>\r\n          You haven't added anything to your cart yet!\r\n        </h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React from \"react\";\r\nimport ProductList from \"../components/ProductList\";\r\nimport CategoryMenu from \"../components/CategoryMenu\";\r\nimport Cart from \"../components/Cart\";\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n      <div className=\"container\">\r\n        <CategoryMenu />\r\n        <ProductList />\r\n        <Cart />       \r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Home;","import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Cart from '../components/Cart';\r\nimport {\r\n  REMOVE_FROM_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  ADD_TO_CART,\r\n  UPDATE_PRODUCTS,\r\n} from '../utils/actions';\r\nimport { QUERY_PRODUCTS } from '../utils/queries';\r\nimport { idbPromise } from '../utils/helpers';\r\n// import spinner from '../assets/spinner.gif';\r\n\r\nfunction Detail() {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n  const { id } = useParams();\r\n\r\n  const [currentProduct, setCurrentProduct] = useState({});\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  const { products, cart } = state;\r\n\r\n  useEffect(() => {\r\n    // already in global store\r\n    if (products.length) {\r\n      setCurrentProduct(products.find((product) => product._id === id));\r\n    }\r\n    // retrieved from server\r\n    else if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products,\r\n      });\r\n\r\n      data.products.forEach((product) => {\r\n        idbPromise('products', 'put', product);\r\n      });\r\n    }\r\n    // get cache from idb\r\n    else if (!loading) {\r\n      idbPromise('products', 'get').then((indexedProducts) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products: indexedProducts,\r\n        });\r\n      });\r\n    }\r\n  }, [products, data, loading, dispatch, id]);\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n      idbPromise('cart', 'put', {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...currentProduct, purchaseQuantity: 1 },\r\n      });\r\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\r\n    }\r\n  };\r\n\r\n  const removeFromCart = () => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: currentProduct._id,\r\n    });\r\n\r\n    idbPromise('cart', 'delete', { ...currentProduct });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {currentProduct && cart ? (\r\n        <div className=\"container my-1\">\r\n          <Link to=\"/storefront\">← Back to Products</Link>\r\n\r\n          <h2>{currentProduct.name}</h2>\r\n\r\n          <p>{currentProduct.description}</p>\r\n\r\n          <p>\r\n            <strong>Price:</strong>${currentProduct.price}{' '}\r\n            <button onClick={addToCart}>Add to Cart</button>\r\n            <button\r\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\r\n              onClick={removeFromCart}\r\n            >\r\n              Remove from Cart\r\n            </button>\r\n          </p>\r\n\r\n          <img\r\n            src={`/images/${currentProduct.image}`}\r\n            alt={currentProduct.name}\r\n          />\r\n        </div>\r\n      ) : null}\r\n      {loading ? <img src={''} alt=\"loading\" /> : null}\r\n      <Cart />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Detail;\r\n","import React from 'react';\r\n\r\nfunction Jumbotron({ children }) {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: 560,\r\n        clear: 'both',\r\n        paddingTop: 120,\r\n        textAlign: 'center',\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\nconst NoMatch = () => {\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h1>404 Page Not Found</h1>\r\n        <h1>\r\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n            🙄\r\n          </span>\r\n        </h1>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMatch;\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_ORDER = gql`\r\n  mutation addOrder($products: [ID]!) {\r\n    addOrder(products: $products) {\r\n      purchaseDate\r\n      products {\r\n        _id\r\n        name\r\n        description\r\n        price\r\n        quantity\r\n        category {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n  ) {\r\n    addUser(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      password: $password\r\n    ) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { Link } from 'react-router-dom';\r\nimport { LOGIN } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nfunction Login(props) {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [login, { error }] = useMutation(LOGIN);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const mutationResponse = await login({\r\n        variables: { email: formState.email, password: formState.password },\r\n      });\r\n      const token = mutationResponse.data.login.token;\r\n      Auth.login(token);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      <Link to=\"/signup\">← Go to Signup</Link>\r\n\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"email\">Email address:</label>\r\n          <input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        {error ? (\r\n          <div>\r\n            <p className=\"error-text\">The provided credentials are incorrect</p>\r\n          </div>\r\n        ) : null}\r\n        <div className=\"flex-row flex-end\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport Auth from '../utils/auth';\r\nimport { ADD_USER } from '../utils/mutations';\r\n\r\nfunction Signup(props) {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [addUser] = useMutation(ADD_USER);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const mutationResponse = await addUser({\r\n      variables: {\r\n        email: formState.email,\r\n        password: formState.password,\r\n        firstName: formState.firstName,\r\n        lastName: formState.lastName,\r\n      },\r\n    });\r\n    const token = mutationResponse.data.addUser.token;\r\n    Auth.login(token);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      <Link to=\"/login\">← Go to Login</Link>\r\n\r\n      <h2>Signup</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"firstName\">First Name:</label>\r\n          <input\r\n            placeholder=\"First\"\r\n            name=\"firstName\"\r\n            type=\"firstName\"\r\n            id=\"firstName\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"lastName\">Last Name:</label>\r\n          <input\r\n            placeholder=\"Last\"\r\n            name=\"lastName\"\r\n            type=\"lastName\"\r\n            id=\"lastName\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row flex-end\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React from 'react';\r\nimport Auth from '../../utils/auth';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Nav() {\r\n  function showNavigation() {\r\n    if (Auth.loggedIn()) {\r\n      return (\r\n        <ul className=\"flex-row\">\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/orderHistory\">Order History</Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\r\n            <a href=\"/\" onClick={() => Auth.logout()}>\r\n              Logout\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      );\r\n    } else {\r\n      return (\r\n        <ul className=\"flex-row\">\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/signup\">Signup</Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/login\">Login</Link>\r\n          </li>\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <header className=\"flex-row px-1\">\r\n      <h1>\r\n        <Link to=\"/\">\r\n          <span role=\"img\" aria-label=\"shopping bag\">\r\n            🦊 \r\n          </span>\r\n          LePaleFoxVintage\r\n        </Link>\r\n      </h1>\r\n\r\n      <nav>{showNavigation()}</nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n//idk man\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n       <header className='flex-row px-1' id='footer'>\r\n        <h1>\r\n            <Link to=\"/\">\r\n                <span role=\"img\" aria-label=\"shopping bag\">\r\n                    🛍 \r\n                </span>\r\n            </Link>\r\n        </h1>\r\n       </header>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useEffect } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport Jumbotron from '../components/Jumbotron';\r\nimport { ADD_ORDER } from '../utils/mutations';\r\nimport { idbPromise } from '../utils/helpers';\r\n\r\nfunction Success() {\r\n  const [addOrder] = useMutation(ADD_ORDER);\r\n\r\n  useEffect(() => {\r\n    async function saveOrder() {\r\n      const cart = await idbPromise('cart', 'get');\r\n      const products = cart.map((item) => item._id);\r\n\r\n      if (products.length) {\r\n        const { data } = await addOrder({ variables: { products } });\r\n        const productData = data.addOrder.products;\r\n\r\n        productData.forEach((item) => {\r\n          idbPromise('cart', 'delete', item);\r\n        });\r\n      }\r\n\r\n      setTimeout(() => {\r\n        window.location.assign('/');\r\n      }, 3000);\r\n    }\r\n\r\n    saveOrder();\r\n  }, [addOrder]);\r\n\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h1>Success!</h1>\r\n        <h2>Thank you for your purchase!</h2>\r\n        <h2>You will now be redirected to the home page</h2>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Success;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_USER } from '../utils/queries';\r\n\r\nfunction OrderHistory() {\r\n  const { data } = useQuery(QUERY_USER);\r\n  let user;\r\n\r\n  if (data) {\r\n    user = data.user;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container my-1\">\r\n        <Link to=\"/storefront\">← Back to Products</Link>\r\n\r\n        {user ? (\r\n          <>\r\n            <h2>\r\n              Order History for {user.firstName} {user.lastName}\r\n            </h2>\r\n            {user.orders.map((order) => (\r\n              <div key={order._id} className=\"my-2\">\r\n                <h3>\r\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\r\n                </h3>\r\n                <div className=\"flex-row\">\r\n                  {order.products.map(({ _id, image, name, price }, index) => (\r\n                    <div key={index} className=\"card px-1 py-1\">\r\n                      <Link to={`/products/${_id}`}>\r\n                        <img alt={name} src={`/images/${image}`} />\r\n                        <p>{name}</p>\r\n                      </Link>\r\n                      <div>\r\n                        <span>${price}</span>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderHistory;\r\n","import React from 'react';\nimport {BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport { Provider } from 'react-redux';\nimport store from './utils/store';\n\nimport Home from './pages/Home';\nimport StoreFront from './pages/StoreFront'\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport Footer from './components/Footer';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\n\n\n\n\n\nfunction App() {\n  return (\n   <>\n  <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Provider store={store}>\n            <Nav />\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/storefront\" \n                element={<StoreFront />} \n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              <Route \n                path=\"/success\" \n                element={<Success />} \n              />\n              <Route \n                path=\"/orderHistory\" \n                element={<OrderHistory />} \n              />\n              <Route \n                path=\"/products/:id\" \n                element={<Detail />} \n              />\n              <Route \n                path=\"*\"\n                element={<NoMatch />} \n              />\n            </Routes>\n            <Footer />\n          </Provider>\n        </div>\n      </Router>\n    </ApolloProvider>\n   </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n  \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n\n"],"sourceRoot":""}